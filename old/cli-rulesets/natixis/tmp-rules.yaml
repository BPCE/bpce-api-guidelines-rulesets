extends: [[spectral:oas2, off]]
rules:
  
  security-definitions-defined:
    recommended: true
    description: Security definitions must be defined
    severity: error
    tags:
      - security
    given: $
    then:
      field: securityDefinitions
      function: truthy
      
  security-definitions-authorized:
    recommended: true
    description: Only apiKey and oauth security definitions are allowed
    severity: error
    tags:
      - security
    given: $.securityDefinitions.*
    then:
      field: type
      function: enumeration
      functionOptions:
        values:
          - apiKey
          - oauth2

  security-definitions-oauth-scopes-defined:
    recommended: true
    description: Scopes must be defined for all Oauth2 security definitions
    severity: error
    tags:
      - security
    given: $.securityDefinitions[?(@.type==='oauth2')]
    then:
      field: scopes
      function: truthy

  security-no-api-level:
    recommended: true
    description: API level security is forbidden (must be configured at operation level)
    severity: error
    tags:
      - security
    given: $
    then:
      field: security
      function: falsy
  
  security-operation-defined-ntx:
    recommended: true
    description: Security must be defined on each operation
    severity: error
    tags:
      - security
    given: $.paths.*.*
    then:
      field: security
      function: truthy
  
  # Spectral OAS 2 rules actually used
  oas2-operation-security-defined: true

  ref-check-test:
    recommended: true
    description: testing if reference are actually resolved
    severity: error
    tags:
      - error
    given: $.paths.*.*.responses.500.schema.properties
    then:
      field: message
      function: truthy

  ref-check-test-json-schema:
    recommended: true
    description: testing if error match guidelines schema
    severity: error
    tags:
      - error
    given: $.paths.*.*.responses.500.schema.properties
    then:
      field: message
      function: truthy

  response-schema-should-be-ref:
    recommended: true
    description: Response schema should not be defined inline
    #severity: warning
    resolved: false
    given: $.paths.*.*.responses.*.schema
    then:
      field: $ref
      function: truthy

  response-only-object:
    recommended: true
    description: An operation can only return an object (no array or atomic like string or number)
    message: 'PROPERTY: {{property}}, ERROR: {{error}}, DESCRIPTION: {{description}}'
    severity: error
    tags:
      - response data
    given: $.paths.*.*.responses.*.schema
    then:
      function: schema
      functionOptions:
        # Pay attention! It's a JSON Schema of the expected Schema (Inception!)
        schema:
          $schema: "http://json-schema.org/draft-04/schema#"
          type: object
          properties:
            type:
              type: string
              enum:
                - object
