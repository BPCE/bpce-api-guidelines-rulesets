{
  "openapi": "3.0.0",
  "info": {
    "title": "prospectRemittance",
    "description": "Remittance",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://fkcapigateway.dev.mycloud.intranatixis.com/prospectRemittance/V0",
      "description": "Production server"
    },
    {
      "url": "http://fkcapigateway.qua.mycloud.intranatixis.com/prospectRemittance/V0",
      "description": "Test server"
    }
  ],
  "paths": {
    "/prospectRemittances": {
      "post": {
        "operationId": "createProspectRemittanceV0",
        "summary": "Creation d'une Remise Prospect",
        "tags": [
          "Remise Prospect"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectRemittanceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Remise cr\ufffd\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectRemittance"
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requ\ufffdte",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      },
      "get": {
        "operationId": "getProspectRemittancesV0",
        "summary": "Liste des remises en cours avec nombre de factues associ\ufffdes",
        "tags": [
          "Remise Prospect"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "prospectId",
            "description": "Identifiant du prospect",
            "schema": {
              "type": "string"
            },
            "example": 1234567890
          },
          {
            "in": "query",
            "name": "caseId",
            "description": "n\ufffd de dossier",
            "schema": {
              "type": "string"
            },
            "example": 1234567890
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des remises",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectRemittances"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      }
    },
    "/prospectRemittances/{prospectRemittanceId}": {
      "patch": {
        "operationId": "updateProspectRemittanceV0",
        "summary": "Mise \ufffd jour d'une remise prospect",
        "tags": [
          "Remise Prospect"
        ],
        "description": "(permet en autre la maj du statut de la remise prospect)\n",
        "parameters": [
          {
            "in": "path",
            "name": "prospectRemittanceId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Remittance Id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectRemittanceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Remise modifi\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectRemittance"
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requ\ufffdte",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Remise non trouv\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      }
    },
    "/prospectRemittances/{prospectRemittanceId}/prospectInvoices": {
      "parameters": [
        {
          "in": "path",
          "name": "prospectRemittanceId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Identifiant de la Remise"
        }
      ],
      "post": {
        "operationId": "createProspectInvoiceV0",
        "summary": "Ajout facture sur remise prospect",
        "tags": [
          "Factures Prospect"
        ],
        "description": "Ajout d'une facture",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectInvoiceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Prospect Invoice created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectInvoice"
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requ\ufffdte",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Remise non trouv\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      },
      "get": {
        "operationId": "listProspectInvoicesV0",
        "summary": "Liste des factures associ\ufffdes \ufffd une remise prospect",
        "tags": [
          "Factures Prospect"
        ],
        "responses": {
          "200": {
            "description": "Liste des factures",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectInvoices"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Remise non trouv\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      }
    },
    "/prospectInvoices/{prospectInvoiceId}": {
      "parameters": [
        {
          "in": "path",
          "name": "prospectInvoiceId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Prospect Invoice Id"
        }
      ],
      "delete": {
        "operationId": "deleteProspectInvoiceV0",
        "summary": "Suppression facture sur remise prospect",
        "tags": [
          "Factures Prospect"
        ],
        "responses": {
          "204": {
            "description": "La facture est supprim\ufffde"
          },
          "400": {
            "description": "Suppression non autoris\ufffde (seul le prospect peut supprimer une facture) \n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Facture non trouv\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      },
      "patch": {
        "operationId": "updateProspectInvoiceV0",
        "summary": "Mise \ufffd jour d'une facture de remise prospect",
        "tags": [
          "Factures Prospect"
        ],
        "description": "Modification d'une facture",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectInvoiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Facture mise \ufffd jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectInvoice"
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requ\ufffdte",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Facture non trouv\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      },
      "put": {
        "operationId": "replaceProspectInvoiceV0",
        "summary": "Remplacement d'une facture prospect",
        "tags": [
          "Factures Prospect"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProspectInvoiceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Facture mise \ufffd jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProspectInvoice"
                }
              }
            }
          },
          "400": {
            "description": "Donn\ufffdes transmises incorrectes ou incompl\ufffdtes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Facture non trouv\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      }
    },
    "/prospectInvoices/{prospectInvoiceId}/documents": {
      "parameters": [
        {
          "in": "path",
          "name": "prospectInvoiceId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Invoice Id"
        }
      ],
      "post": {
        "operationId": "createInvoiceDocumentV0",
        "summary": "Ajout document sur facture",
        "description": "Nom de fichier et type de fichier fournis dans le header du Multi-part.\nhttps://swagger.io/docs/specification/describing-request-body/file-upload/\n",
        "tags": [
          "Documents de Factures (PDF/PNG/JPG)"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document ajout\ufffd \ufffd la Facture",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "description": "Erreur dans la requ\ufffdte",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Facture non trouv\ufffde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      }
    },
    "/documents/{documentId}": {
      "parameters": [
        {
          "in": "path",
          "name": "documentId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Document Id"
        }
      ],
      "delete": {
        "operationId": "deleteInvoiceDocumentV0",
        "summary": "suppression d'un document de facture",
        "tags": [
          "Documents de Factures (PDF/PNG/JPG)"
        ],
        "responses": {
          "204": {
            "description": "Document supprim\ufffd"
          },
          "400": {
            "description": "Suppression non autoris\ufffde (seul le prospect peut supprimer un document) \n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Document non trouv\ufffd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      },
      "get": {
        "operationId": "getDocumentV0",
        "summary": "Binaire du document",
        "tags": [
          "Documents de Factures (PDF/PNG/JPG)"
        ],
        "responses": {
          "200": {
            "description": "Binaire du document",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Response401"
          },
          "404": {
            "description": "Document non trouv\ufffd",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Response500"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "Response401": {
        "description": "Probl\ufffdme d'autorisation",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Response500": {
        "description": "Erreur inattendue",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "prospectRemittanceCreate": {
        "type": "object",
        "properties": {
          "CommercialId": {
            "type": "string"
          },
          "prospectId": {
            "type": "string",
            "example": 123456789
          },
          "caseId": {
            "type": "string",
            "example": 20190412
          }
        },
        "required": [
          "commercialId",
          "prospectId",
          "caseId"
        ]
      },
      "ProspectRemittanceUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "default": "pending",
            "enum": [
              "analyzed",
              "closed"
            ]
          }
        }
      },
      "ProspectRemittance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Propect Remittance Id"
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "commercialId": {
            "type": "string"
          },
          "prospectId": {
            "type": "string"
          },
          "caseId": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "invoicesStatistics": {
            "type": "object",
            "properties": {
              "totalInvoiceCount": {
                "type": "integer",
                "description": "nombre total de factures associ\ufffdes \ufffd la remise"
              },
              "notTransmittedInvoiceCount": {
                "type": "integer",
                "description": "nombre de factures non encore transmises"
              },
              "transmittedInvoiceCount": {
                "type": "integer",
                "description": "nombre de factures transmises"
              },
              "analyzedInvoiceCount": {
                "type": "integer",
                "description": "nombre de factures analys\ufffdes"
              }
            },
            "required": [
              "totalInvoiceCount",
              "notTransmittedInvoiceCount",
              "transmittedInvoiceCount",
              "analyzedInvoiceCount"
            ]
          }
        },
        "required": [
          "id",
          "status",
          "commercialId",
          "prospectId",
          "caseId",
          "creationDate"
        ]
      },
      "ProspectRemittances": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProspectRemittance"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ProspectInvoiceCreate": {
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "example": "7654321",
            "description": "n\ufffd de facture prospect"
          },
          "issueDate": {
            "type": "string",
            "format": "date"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "debtorName": {
            "type": "string"
          }
        },
        "required": [
          "reference",
          "issueDate",
          "dueDate",
          "amount"
        ]
      },
      "ProspectInvoiceUpdate": {
        "type": "object",
        "description": "Seul le commercial peut modifier les donn\ufffdes type \"check\"",
        "properties": {
          "status": {
            "type": "string"
          },
          "reference": {
            "type": "string",
            "example": "7654321",
            "description": "n\ufffd de facture prospect"
          },
          "issueDate": {
            "type": "string",
            "format": "date"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "debtorName": {
            "type": "string"
          },
          "debtorInsuranceCheck": {
            "type": "boolean"
          },
          "dateCheck": {
            "type": "boolean"
          },
          "debtorActivityCheck": {
            "type": "boolean"
          }
        }
      },
      "ProspectInvoice": {
        "type": "object",
        "description": "Les donn\ufffdes de type \"check\" ne sont accessibles que pour les commerciaux (les donn\ufffdes doivent \ufffdtre absentes pour un prospect, et non renvoy\ufffdes nulles)",
        "properties": {
          "id": {
            "type": "string"
          },
          "prospectRemittanceId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "reference": {
            "type": "string",
            "example": "7654321",
            "description": "n\ufffd de facture prospect"
          },
          "issueDate": {
            "type": "string",
            "format": "date"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "amount": {
            "$ref": "#/components/schemas/Amount"
          },
          "debtorName": {
            "type": "string"
          },
          "debtorInsuranceCheck": {
            "type": "boolean"
          },
          "dateCheck": {
            "type": "boolean"
          },
          "debtorActivityCheck": {
            "type": "boolean"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        },
        "required": [
          "id",
          "prospectRemittanceId",
          "status",
          "reference",
          "issueDate",
          "dueDate",
          "amount",
          "creationDate"
        ]
      },
      "ProspectInvoices": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProspectInvoice"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "DocumentCreate": {
        "type": "object",
        "description": "Nom de fichier et type de fichier fournis dans le header du Multi-part\nhttps://swagger.io/docs/specification/describing-request-body/file-upload/\n",
        "properties": {
          "type": {
            "type": "string",
            "description": "Facture / Bon de commande / Autre",
            "enum": [
              "invoice",
              "order",
              "other"
            ]
          },
          "file": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "file"
        ]
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Facture / Bon de commande/ Autre",
            "enum": [
              "invoice",
              "order",
              "other"
            ]
          },
          "contentType": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "filename",
          "contentType"
        ]
      },
      "Amount": {
        "required": [
          "value",
          "currency"
        ],
        "properties": {
          "value": {
            "type": "number",
            "example": "4761,12"
          },
          "currency": {
            "type": "string",
            "description": "Devise (code iso 4217)",
            "example": "EUR"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "minItems": 1,
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Error Code",
                  "example": "INVALID_FORMAT"
                },
                "message": {
                  "type": "string",
                  "description": "Error Message",
                  "example": "Invalid format"
                },
                "attribute": {
                  "type": "string",
                  "description": "attribute name at the error origin",
                  "example": "userFrom"
                }
              },
              "required": [
                "code",
                "message"
              ]
            }
          }
        },
        "required": [
          "errors"
        ]
      }
    }
  }
}